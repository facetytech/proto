syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";


service Acceptance {

    // Verification of status of accepting TOS & Privacy Policy
    rpc Check (ProtocolSelector) returns (Verdict) {}

    // Add new record about TOS & PP was accepted
    rpc Add (Protocol) returns (google.protobuf.Empty) {}

}

service Text {
    
    rpc GetByLang (UserLanguages) returns (Src) {}

    // Return an actually TOS & PP version
    rpc GetCurrentVersionNum (google.protobuf.Empty) returns (Version) {}
}


message ProtocolSelector {
    string id = 1;  // id of a protocol do verification for
}

message Verdict {
    bool status = 1;
    string comment = 2;
}

message Version {
    string number = 1;
}

message Protocol {
    string previously = 1;
    google.protobuf.Timestamp timestamp = 2;
    string version = 3;
    string language = 4;
    string tos_hash = 5;
    string pp_hash = 6;
    map<string, string> headers = 7;
}

message UserLanguages {
    repeated string lang = 1;
}

message Src {
    string tos_text = 1;
    string tos_hash = 2;
    string pp_text = 3;
    string pp_hash = 4;
    string lang = 5;
}
